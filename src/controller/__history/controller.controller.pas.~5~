unit controller.controller;

interface

uses
  controller.interfaces, controller.dto.interfaces, Model.Interfaces,
  controller.dto.cliente, Model.Configuracao;

type
  TController = class(TInterfacedObject, iController)
    private
      FCliente      : iCliente;
      FPessoa       : iPessoa;
      FConfiguracao : iConfiguracao;
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iController;
      function Cliente : iCliente;
      function Pessoa : iPessoa;
      function Configuracao : iConfiguracao;
  end;

implementation

{ TController }

function TController.Cliente: iCliente;
begin
  if not Assigned(FCliente) then
     FCliente := TClienteDTO.New;
  Result := FCliente;
end;

function TController.Configuracao: iConfiguracao;
begin
  if not Assigned(FConfiguracao) then
    FConfiguracao := TConfiguracao.New;
  Result := FConfiguracao;
end;

constructor TController.Create;
begin

end;

destructor TController.Destroy;
begin

  inherited;
end;

class function TController.New: iController;
begin

end;

function TController.Pessoa: iPessoa;
begin

end;

end.
