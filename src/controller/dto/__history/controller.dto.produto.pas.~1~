unit controller.dto.produto;

interface

uses
  controller.dto.interfaces, Dao.Interfaces.CRUD, Model.Produto,
  Dao.CRUDSimpleORM;

type
  TProdutoDTO = class(TInterfacedObject,iProduto)
    private
      FEntity : TProduto;
      FService: iCRUD<TProduto>;
    public
       constructor Create;
       destructor Destroy; override;
       class function New : iProduto;
       function id(aValue : Integer) : iProduto; overload;
       function id: integer; overload;
       function descricao(aValue : string) : iProduto; overload;
       function descricao: string; overload;
       function preco(aValue : double) : iProduto; overload;
       function preco: double; overload;
       function Build : iCRUD<TProduto>;
  end;


implementation

{ TProdutoDTO }



{ TProdutoDTO }

function TProdutoDTO.Build: iCRUD<TProduto>;
begin

end;

constructor TProdutoDTO.Create;
begin

end;

function TProdutoDTO.descricao(aValue: string): iProduto;
begin

end;

function TProdutoDTO.descricao: string;
begin

end;

destructor TProdutoDTO.Destroy;
begin

  inherited;
end;

function TProdutoDTO.id(aValue: Integer): iProduto;
begin

end;

function TProdutoDTO.id: integer;
begin

end;

class function TProdutoDTO.New: iProduto;
begin

end;

function TProdutoDTO.preco(aValue: double): iProduto;
begin

end;

function TProdutoDTO.preco: double;
begin

end;

end.
